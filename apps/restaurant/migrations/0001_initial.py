# Generated by Django 3.1.7 on 2021-03-21 10:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_postcode', models.CharField(default='', max_length=100, verbose_name='Город и почтовый индекс')),
                ('street_building', models.CharField(default='', max_length=100, verbose_name='Улица и номер здания')),
                ('from_hour_mon_thurs', models.TimeField(default='10:00:00', verbose_name='Время открытия Пн-Чт')),
                ('to_hour_mon_thurs', models.TimeField(default='23:00:00', verbose_name='Время закрытия Пн-Чт')),
                ('from_hour_fri_sun', models.TimeField(default='11:00:00', verbose_name='Время открытия Пт-Вс')),
                ('to_hour_fri_sun', models.TimeField(default='02:00:00', verbose_name='Время закрытия Пт-Вс')),
                ('contact_phone', models.CharField(max_length=16, verbose_name='Контактный номер')),
                ('reservation_phone', models.CharField(max_length=16, verbose_name='Номер для бронирования столиков')),
                ('email', models.EmailField(max_length=100, verbose_name='Email')),
            ],
            options={
                'verbose_name': 'Контактная информация',
                'verbose_name_plural': 'Контактная информация',
            },
        ),
        migrations.CreateModel(
            name='Kitchen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Кухня')),
                ('description', models.TextField(max_length=1000, verbose_name='Описание')),
                ('image', models.ImageField(default='no_image.jpg', upload_to='kitchen/', verbose_name='Изображение')),
                ('url', models.SlugField(max_length=100, unique=True, verbose_name='Ссылка')),
            ],
            options={
                'verbose_name': 'Кухня мира',
                'verbose_name_plural': 'Кухни мира',
            },
        ),
        migrations.CreateModel(
            name='RestaurantImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('image', models.ImageField(upload_to='chefs/', verbose_name='Фото ресторана')),
            ],
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('email', models.EmailField(max_length=100, verbose_name='Email')),
                ('message', models.TextField(max_length=200, verbose_name='Сообщение')),
                ('draft', models.BooleanField(default=True, verbose_name='Черновик')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
            },
        ),
        migrations.CreateModel(
            name='Foods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Блюдо')),
                ('description', models.TextField(verbose_name='Описание')),
                ('price', models.PositiveSmallIntegerField(default=0, help_text='указывать сумму в рублях', verbose_name='Цена')),
                ('image', models.ImageField(default='no_image.jpg', upload_to='food/', verbose_name='Изображение')),
                ('url', models.SlugField(max_length=100, unique=True, verbose_name='Ссылка')),
                ('in_menu', models.BooleanField(default=True, verbose_name='Показывать в меню')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='restaurant.category', verbose_name='Категория блюда')),
                ('kitchen', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='restaurant.kitchen', verbose_name='Кухня мира')),
            ],
            options={
                'verbose_name': 'Блюдо',
                'verbose_name_plural': 'Блюда',
            },
        ),
        migrations.CreateModel(
            name='Chefs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Шеф-повар')),
                ('age', models.PositiveSmallIntegerField(verbose_name='Возраст')),
                ('description', models.TextField(max_length=300, verbose_name='Описание')),
                ('image', models.ImageField(upload_to='chefs/', verbose_name='Фото шеф-повара')),
                ('url', models.SlugField(max_length=100, unique=True, verbose_name='Ссылка')),
                ('kitchen', models.ManyToManyField(to='restaurant.Kitchen', verbose_name='Кухня мира')),
            ],
            options={
                'verbose_name': 'Шеф-повар',
                'verbose_name_plural': 'Шеф-повара',
            },
        ),
    ]
